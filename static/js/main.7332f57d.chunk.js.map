{"version":3,"sources":["containers/InterestForm/InterestForm.js","store/actions/interest.js","store/actions/actionTypes.js","components/InterestResult/InterestResult.js","containers/CompoundInterest.js","App.js","serviceWorker.js","store/reducers/interestReducer.js","index.js"],"names":["connect","state","principal","interest","interest_period","money_per_period","stop_money_years","deposit_years","dispatch","onUpdateFormData","stateAttr","stateValue","type","actions","calculate","props","interest_arr","i","push","interest_options","map","react_default","a","createElement","key","value","stop_money_arr","stop_money_options","inputChangedHandler","event","console","log","target","id","htmlFor","defaultValue","min","onChange","className","onClick","InterestResult","result","item","period","total_principal_money","temp_interest_money","total_interest_money","total_money","CompoundInterest","containers_InterestForm_InterestForm","components_InterestResult_InterestResult","this","calculate_result","Component","App","src_containers_CompoundInterest","Boolean","window","location","hostname","match","initialState","convert_period_str","num","parseInt","String","padStart","reducer","arguments","length","undefined","action","Object","objectSpread","defineProperty","isNaN","calculate_interest","toFixed","period_times","stop_money_period","Math","round","calculateCompoundInterest","composeEnhancers","compose","rootReducer","combineReducers","interestReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7332f57d.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './InterestForm.scss';\nimport * as actions from '../../store/actions/index';\n\nconst InterestForm = props => {\n  const interest_arr = [] ,interest_max = 20;for( let i=1; interest_arr.push(i++) < interest_max;);\n  let interest_options = interest_arr.map(i => {\n    return <option key={i} value={0.01 * i} >{i}%</option>\n  });\n\n  const stop_money_arr = [] ,stop_money_max = 40;for( let i=0; stop_money_arr.push(i++) <= stop_money_max;);\n  let stop_money_options = stop_money_arr.map(i => {\n    return <option key={i} value={i} >{i === 0 ? '不停止投入' : i+'年後停止'}</option>\n  });\n\n  const inputChangedHandler = (event) => {\n    console.log(event.target.id, event.target.value);\n    props.onUpdateFormData(event.target.id, event.target.value);\n    \n  }\n\n  return (\n    <div id=\"InterestForm\">\n      <div >\n        <label htmlFor=\"principal\">本金:</label>\n        <input type=\"number\"  defaultValue={props.principal} id=\"principal\" min=\"1\" onChange={(event) => inputChangedHandler(event)}/>\n      </div>\n      <div >\n        <label htmlFor=\"interest\">年利率:</label>\n        <select id=\"interest\" defaultValue={props.interest} onChange={(event) => inputChangedHandler(event)}>\n          {interest_options}\n        </select>\n      </div>\n      <div >\n        <label htmlFor=\"money_per_period\">週期投入金額:</label>\n        <select id=\"interest_period\" defaultValue={props.interest_period} onChange={(event) => inputChangedHandler(event)}>\n          <option value=\"month\">每月</option>\n          <option value=\"year\">每年</option>\n        </select>\n        <input type=\"number\"  defaultValue={props.money_per_period} id=\"money_per_period\" min=\"1\" onChange={(event) => inputChangedHandler(event)}/>\n        <select id=\"stop_money_years\" defaultValue={props.stop_money_years} onChange={(event) => inputChangedHandler(event)}>\n          {stop_money_options}\n        </select>\n      </div>\n      <div >\n        <label htmlFor=\"deposit_years\">計算年份:</label>\n        <input type=\"number\"  defaultValue={props.deposit_years} id=\"deposit_years\" min=\"1\" onChange={(event) => inputChangedHandler(event)}/>\n      </div>\n      \n      <button type=\"button\" className=\"sendBtn\" onClick={props.calculate}>send</button>\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return {\n    principal: state.interest.principal,\n    interest: state.interest.interest,\n    interest_period: state.interest.interest_period,\n    money_per_period: state.interest.money_per_period,\n    stop_money_years: state.interest.stop_money_years,\n    deposit_years: state.interest.deposit_years,\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateFormData: (stateAttr, stateValue) => dispatch(actions.updateFormData(stateAttr, stateValue)),\n    calculate: () => dispatch(actions.calculateCompoundInterest()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InterestForm);","import * as actionTypes from './actionTypes';\n\nexport const updateFormData = (stateAttr, stateValue) => {\n  return {\n    type: actionTypes.UPDATE_FORM_DATA,\n    stateAttr: stateAttr,\n    stateValue: stateValue,\n  }\n}\n\nexport const calculateCompoundInterest = () => {\n  return {\n    type: actionTypes.CALCULATE_COMPOUND_INTEREST,\n  }\n}","export const UPDATE_FORM_DATA = 'UPDATE_FORM_DATA';\nexport const CALCULATE_COMPOUND_INTEREST = 'CALCULATE_COMPOUND_INTEREST';","import React from 'react';\n\nimport './InterestResult.scss';\n\nconst InterestResult = props => {\n  console.log('InterestResult', props.result);\n  const result = props.result ? props.result.map(item => {\n    return (\n      <tr key={item.period}>\n        <td>{item.period}</td>\n        <td>{item.total_principal_money}</td>\n        <td>{item.temp_interest_money}</td>\n        <td>{item.total_interest_money}</td>\n        <td>{item.total_money}</td>\n      </tr>\n    )\n  }) : null ;\n\n  return(\n    <table className=\"dataTable\">\n      <thead>\n        <tr>\n          <th>年月</th>\n          <th>總本金</th>\n          <th>利息</th>\n          <th>總利息</th>\n          <th>總金額</th>\n        </tr>\n      </thead>\n      <tbody>\n        {result}\n      </tbody>\n    </table>\n  )\n}\n\nexport default InterestResult;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './CompoundInterest.css';\nimport InterestForm from './InterestForm/InterestForm';\nimport InterestResult from '../components/InterestResult/InterestResult';\n\nclass CompoundInterest extends Component {\n  render() {\n    return(\n      <div id='CompoundInterest'>\n        <div>\n          <InterestForm/>\n        </div>\n        <div>\n          <InterestResult result={this.props.calculate_result}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    calculate_result: state.interest.calculate_result,\n  }\n}\n\nexport default connect(mapStateToProps, null)(CompoundInterest);","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport CompoundInterest from './containers/CompoundInterest';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CompoundInterest />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  principal: 1000000,\n  interest: 0.03,\n  interest_period: 'month',\n  money_per_period: 50000,\n  stop_money_years: 0,\n  deposit_years: 20,\n  calculate_result: [],\n}\n\nconst calculateCompoundInterest = (state, action) => {\n\n  console.log(state.principal, state.interest, state.interest_period, state.money_per_period, state.deposit_years, state.stop_money_years);\n  let calculate_interest = state.interest_period === 'month' ? (state.interest/12).toFixed(6) : state.interest;\n  let period_times = state.interest_period === 'month' ? state.deposit_years * 12 : state.deposit_years;\n  let stop_money_period = state.interest_period === 'month' ? state.stop_money_years * 12 : state.stop_money_years;\n\n  let total_money = state.principal;\n  let total_principal_money = state.principal;\n  let total_interest_money = 0;\n  let result = [];\n  for (let i = 1 ; i <= period_times ; i++) {\n    let temp_interest_money = Math.round(total_money * (calculate_interest));\n    total_interest_money += temp_interest_money;\n    total_money = total_money + temp_interest_money;\n    // console.log(convert_period_str(i, state.interest_period) + ' / 總本金:' + total_principal_money + ' / 此次利息:' + temp_interest_money + ' / 總利息:' + total_interest_money + ' / 總金額:' + total_money);\n    result.push({\n      period: convert_period_str(i, state.interest_period),\n      total_principal_money: total_principal_money,\n      temp_interest_money: temp_interest_money,\n      total_interest_money: total_interest_money,\n      total_money: total_money,\n    })\n\n    if (stop_money_period === 0 || i < stop_money_period){\n      total_money += state.money_per_period;\n      total_principal_money += state.money_per_period;\n    }    \n  }\n  console.log(result);\n  return {\n    ...state,\n    ...{ calculate_result: result }\n  };\n}\n\nconst convert_period_str = (num, period) => {\n  if (period === 'month'){\n    return parseInt(num/12) + ' 年 ' + String(num%12).padStart(2, '0') + ' 月';\n  }else{\n    return num + ' 年';\n  }\n}\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.UPDATE_FORM_DATA:\n      return {\n        ...state,\n        ...{ [action.stateAttr]: isNaN(action.stateValue) ? action.stateValue : +action.stateValue }\n      };\n    case actionTypes.CALCULATE_COMPOUND_INTEREST: \n      return calculateCompoundInterest(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as serviceWorker from './serviceWorker';\n\nimport interestReducer from './store/reducers/interestReducer';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\n  interest: interestReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n      <App />\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}